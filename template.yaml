AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

# https://docs.aws.amazon.com/lambda/latest/dg/urls-tutorial.html


Resources:
  MotivationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: decision-dice-motivators
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
            AllowedOrigins:
              - "https://decisions.joshuarichardson.dev"
              - "http://localhost:3000"

  MotivationBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: decision-dice-motivators
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFrontServicePrincipalReadOnly
            Effect: Allow
            Principal:
            Service: cloudfront.amazonaws.com
            Action:
            - s3:GetObject
            Resource: "arn:aws:s3:::decision-dice-motivators/*"
            Condition:
              StringEquals:
                AWS:SourceArn: 
                - !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${MotivationDistribution}"
          - Sid: AllowCloudFrontApiPrincipal
            Effect: Allow
            Principal:
            Service: cloudfront.amazonaws.com
            Action:
              - s3:GetObject
            Resource: "arn:aws:s3:::decision-dice-motivators/*"
            Condition:
              StringEquals:
                AWS:SourceArn: 
                - !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${DecisionApiDistribution}"

  MotivationOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl  
    Properties:
      OriginAccessControlConfig:
        Name: MotivationOAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  DecisionsApiOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl  
    Properties:
      OriginAccessControlConfig:
        Name: DecisionsApiOac
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
      
  MotivationDistribution:
    Type: AWS::CloudFront::Distribution  
    Properties:
      DistributionConfig:
        Aliases:
          - decisions.joshuarichardson.dev
        DefaultCacheBehavior:
          TargetOriginId: Motivators
          ViewerProtocolPolicy: allow-all
          CachePolicyId: !Ref MotivationCachePolicy
        Enabled: true
        Origins:
          - Id: Motivators
            DomainName: decision-dice-motivators.s3.eu-west-2.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref MotivationOriginAccessControl
            OriginPath: /index.html
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:266804135388:certificate/126b7b2b-ea99-40af-98a2-03ab69944526
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only

  DecisionApiDistribution:
    Type: AWS::CloudFront::Distribution  
    Properties:
      DistributionConfig:
        Aliases:
          - decisions-api.joshuarichardson.dev
        DefaultCacheBehavior:
          TargetOriginId: DecisionApi
          ViewerProtocolPolicy: allow-all
          CachePolicyId: !Ref MotivationCachePolicy
        Enabled: true
        Origins:
          - Id: DecisionApi
            DomainName: decision-dice-motivators.s3.eu-west-2.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref DecisionsApiOriginAccessControl
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:266804135388:certificate/17a8bb50-7f70-4cc7-9f4f-39fcd8ddce1a
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only

  MotivationCachePolicy:
    Type: AWS::CloudFront::CachePolicy  
    Properties:
      CachePolicyConfig:
        DefaultTTL: 86400
        MaxTTL: 86400
        MinTTL: 86400
        Name: MotivationCachePolicy
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Origin
          QueryStringsConfig:
            QueryStringBehavior: none

  MotivationManagementFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: MotivatorManagementFunction
      Runtime: dotnet6
      CodeUri: publish/MotivatorManagementFunction
      MemorySize: 256
      Timeout: 30
      ReservedConcurrentExecutions: 1
      Role: !GetAtt MotivationManagementFunctionRole.Arn
    
  MotivationManagementFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaLogging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: LambdaLogging
                Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogGroup"
                Resource: "*"
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: S3Access
                Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:DeleteObject"
                  - "s3:ListBucket"
                Resource: "arn:aws:s3:::decision-dice-motivators/*"
              - Sid: Cloudfront
                Effect: Allow
                Action:
                  - "cloudfront:CreateInvalidation"
                Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/E33YSSGHUP7B9Q"

  UrlLambdaInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref MotivationManagementFunction
      FunctionUrlAuthType: NONE
      Principal: "*"

  MotivationManagementUrl:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      Cors:
        AllowOrigins:
          - https://decisions.joshuarichardson.dev
          - http://decisions.joshuarichardson.dev 
      TargetFunctionArn: !GetAtt MotivationManagementFunction.Arn